#!/usr/bin/env nextflow

// nextflow.config

manifest {
    name = 'RareVariant-Project'
    author = 'Surya B. Chhetri'
    description = 'Nextflow Based Rare-variant Watershed Pipeline'
    mainScript = 'main.nf'
    version = '1.0.0'
}


/*
========================================================================================
    Include integrate modular config files
========================================================================================
*/

includeConfig './conf/params.config'
includeConfig './conf/params1.config'
includeConfig './conf/base.config' // general default base resource settings
includeConfig './conf/labels.config' // general label resource settings
includeConfig './conf/process_resources.config' // general process resource settings

//includeConfig './conf/profile_resources.config'


// specific base resources, label and process resources with -profile run
profiles {

    local {
      includeConfig './conf/local.config'
    }

    slurm {
        includeConfig './conf/slurm.config'
        process {
            executor = 'slurm'
            queue = 'shared'
            time = { 4.h * task.attempt }
            memory = { 8.GB * task.attempt }
            cpus = { Math.min(8, 2 * task.attempt) }
            maxRetries = 3
            penv = 'smp'
            beforeScript = 'ml java/19'
        }
    }

    sge { 
     includeConfig './conf/sge.config'
    }

    awsbatch {
      includeConfig './conf/awsbatch.config'
    }

    docker {
        process.container = 'biocontainers/samtools'
        docker.enabled = true 
    }

    singularity {
        singularity.cacheDir = "${params.cache_dir}/singularitycache"
        singularity.enabled = true
        singularity.autoMounts = true
        runOptions = '--pull=always'
        //process.container = 'docker://bryancquach/peer:1.3'
        //singularity.libraryDir = "${params.cache_dir}/singularitycache/cachelib"
    }
    
    conda { 
        includeConfig 'conf/conda.config'
        conda.enabled=true
        conda.useMamba=true
        conda.cacheDir="${params.cache_dir}/condacache"

        /*process {
            withName: 'process_data' {
                conda = "${params.watershed_pyenv}"
            }
        }*/
 
    }

    retry {
     includeConfig './conf/retry.config'
    }

}

/*
==================================================================================================================
    Default: General Custom setup for conda/docker/singularity container (instead of -profile singularity option)
==================================================================================================================
*/

singularity {
     enabled=true
     cacheDir="${params.cache_dir}/singularitycache"
     autoMounts=true
     runOptions = '--cleanenv'
}

process.cache = 'lenient'
//process.cache = 'true'
process {

    withName: VEP_RUN {
        module = ['java/19', 'samtools/1.15.1']
        conda = "/home/schhetr1/anaconda3/envs/eqtlgen"
        container = 'docker://ensemblorg/ensembl-vep'
        }
    
    withName: process_expr_data {
        module = ['java/19', 'samtools/1.15.1']
        conda = "/home/schhetr1/anaconda3/envs/eqtlgen"
        container = 'docker://ensemblorg/ensembl-vep'
        }
    
    withLabel: watershed_python_env {
        conda = "${params.watershed_pyenv}"
        }
    
    withLabel: watershed_r_env {
        conda = "${params.watershed_renv}"
        }

    withLabel: watershed_env {
        conda = "${params.watershed_env}"
        }
    
    withLabel: peer_docker_env {
        //conda = "/home/schhetr1/anaconda3/envs/eqtlgen" // for singularity
        conda = "${params.watershed_env}" // for singularity
        container = 'docker://bryancquach/peer:1.3'
        containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}
        }
}


process {
    withName:process_data {
        executor = 'slurm'
        memory = '3.4 GB'
        time = '1h'
        cpus = 1
    }

    withName: split_population {
        executor = 'slurm'
        memory = '3 GB'
        time = '1h'
        cpus = 1
    }

    withName: normalize_expression {
        executor = 'slurm'
        memory = '10 GB'
        time = '1h'
        cpus = 3
    }
    
    withName: compute_peerfactors {
        executor = 'slurm'
        memory = '15 GB'
        time = '1.5h'
        cpus = 4
    }

    withName: compute_expr_residuals {
        executor = 'slurm'
        memory = '15 GB'
        time = '2.5h'
        cpus = 4
    }

    withName: call_expr_outliers {
        executor = 'slurm'
        memory = '24 GB'
        time = '3h'
        cpus = 7
    }
}


/*
========================================================================================
    Custom environment variable setups
========================================================================================
*/


/*
env {
    R_PROFILE_USER = "/.Rprofile"
    R_ENVIRON_USER = "/.Renviron"
    PYTHONNOUSERSITE = 1
    }
*/



/*
========================================================================================
    Nextflow Metrics & Reports
========================================================================================
*/

timeline {
  overwrite = true
  enabled = true
  file    = "${params.out_dir}/outputs/reports_nxf/timeline.html"
}

report {
  overwrite = true
  enabled = true
  file    = "${params.out_dir}/outputs/reports_nxf/report.html"
}

trace {
  overwrite = true
  enabled = true
  fields  = 'task_id,name,status,exit,realtime,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar'
  file    = "${params.out_dir}/outputs/reports_nxf/trace.txt"
}


/*
========================================================================================
    Nextflow Process Selector Option Examples
========================================================================================
*/
/*
* A process selector can be negated prefixing it with the special character !
process {
    withLabel: 'foo' { cpus = 2 }
    withLabel: '!foo' { cpus = 4 }
    withName: '!align.*' { queue = 'long' }
}
*/


/*
* The above configuration snippet sets 2 cpus for the processes annotated with the foo label 
* and 4 cpus to all processes not annotated with that label. Finally it sets the use of long 
*queue to all process whose name does not start with align.
*/


//conda.cacheDir='/scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts/condacache-test'
