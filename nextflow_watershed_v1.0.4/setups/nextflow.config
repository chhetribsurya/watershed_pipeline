#!/usr/bin/env nextflow

params {

    // define all params upfront
    //cache_dir="/scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts/cache/setup_cache"

    cache_dir="${params.setup_cache_dir}"
    conda_cache_dir="${cache_dir}/condacache"
    singularity_cache_dir="${cache_dir}/singularitycache"
    cachedir_vep="${cache_dir}/vepcache"

}

params.out_dir = '/scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts'
params.watershed_renv = '/scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts/env_ymls/watershed_renv.yml'
params.watershed_pyenv = '/scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts/env_ymls/watershed_pyenv.yml'
params.cohort_name = 'GLOBAL' // Default to 'GLOBAL'
params.num_chromosomes = 5

//filter gnomad variants
params.gnomad_file = "/data/abattle4/surya/datasets/for_ashis/gnomAD_v2.1/gnomad.genomes.r2.1.1.sites.liftover_grch38.vcf.bgz"
params.gencode_region_file = "../data/gencode.v38.GRCh38.genes_padded10kb_PCandlinc_only.bed"

profiles {
    conda_and_singularity {
        conda {
            enabled = true
            useMamba = true
            cacheDir = "${params.conda_cache_dir}"
        }
        singularity {
            enabled = true
            cacheDir = "${params.singularity_cache_dir}"
            autoMounts = true
            runOptions = '--cleanenv'
        }
    }
}


process.cache = 'lenient'

process {
    withLabel: watershed_python_env {
        conda = "${params.watershed_pyenv}"
        }
    
    withLabel: watershed_r_env {
        conda = "${params.watershed_renv}"
        }
}

process {

    withLabel: vep_docker_env  {
        module = ['java/19', 'samtools/1.15.1']
        container = 'docker://ensemblorg/ensembl-vep'
        conda = '../env_ymls/watershed_env.yml'  // Path to the Conda environment file
        containerOptions = "--bind ${params.cachedir_vep}:/vepcache"

        //containerOptions = "--bind /scratch16/abattle4/surya/datasets/for_scripts/project_watershed/nextflow_pipe/test-scripts/cache/setup_cache/vepcache:/vepcache"
        //containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}
        //conda = "${params.watershed_env}"

        }

    withName: build_vep_cache {
        //conda = "${params.watershed_env}"
        //container = 'docker://ensemblorg/ensembl-vep'

        executor = 'slurm'
        cpus = 3
        memory = '10 GB'
        //queue = 'shared'
        time = '3 h'
        
        //clusterOptions =  '-N 1 -n 16 -t 02:00:00'
        //clusterOptions='--ntasks-per-node=1 --export=NONE --export=NTHREADS --mem-bind=local'
    }

    /*withName: chromsplit_rv_file {
        executor = 'slurm'
        cpus = 3
        memory = '10 GB'
        time = '3 h'
    }*/

    /*withName: call_vep_annotation_final {
        executor = 'slurm'
        cpus = 3
        memory = '10 GB'
        time = '3 h'
    }*/

    withName: call_vep_annotation_final {
        executor = 'slurm'
        queue = 'express'
        cpus = 4
        memory = '12 GB'
        time = '3 h'
    }
}


process {
    withName: filter_variants_generegions {
        conda = '../env_ymls/watershed_rv_env.yml'
        executor = 'slurm'
        queue = 'shared'
        cpus = 12
        memory = '40 GB'
        time = '20 h'
    }

    withName: split_vcfs_gnomad {
        conda = '../env_ymls/watershed_rv_env.yml'
        executor = 'slurm'
        queue = 'shared'
        cpus = 12
        memory = '40 GB'
        time = '20 h'
    }

    withName: split_vcfs_gnomad_parallel {
        conda = '../env_ymls/watershed_rv_env.yml'
        executor = 'slurm'
        queue = 'shared'
        cpus = 22
        memory = '60 GB'
        time = '8 h'
    }
}
